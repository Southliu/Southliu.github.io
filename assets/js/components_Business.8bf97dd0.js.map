{"version":3,"file":"components_Business.8bf97dd0.js","sources":["../../../src/utils/config.ts","../../../src/utils/crypto.ts","../../../src/utils/local.ts","../../../src/hooks/useToken.ts","../../../src/utils/request.ts","../../../src/utils/helper.ts","../../../src/servers/platform/game.ts","../../../src/components/Business/Selects/GameSelect.tsx","../../../src/servers/platform/partner.ts","../../../src/components/Business/Selects/PartnerSelect.tsx","../../../src/components/Business/index.tsx"],"sourcesContent":["/**\n * @description: 配置项\n */\nexport const TITLE_SUFFIX = '后台管理系统' // 标题后缀\nexport const TOKEN = 'admin_token' // token名称\nexport const WATERMARK_PREFIX = 'admin' // 水印前缀\nexport const EMPTY_VALUE = '-' // 空值显示\nexport const CRYPTO_SECRET = '__Vite_Admin_Secret__' // 加密密钥\nexport const THEME_KEY = 'theme_key' // 主题\n \n // 公共组件默认值\n export const PLEASE_ENTER = '请输入' // 输入框默认文字\n export const PLEASE_SELECT = '请选择'// 选择框默认文字\n export const MAX_TAG_COUNT = 'responsive' // 最多显示多少个标签，responsive：自适应\n export const INPUT_REQUIRED = [{ required: true, message: PLEASE_ENTER }] // 输入框必填校验\n export const SELECT_REQUIRED = [{ required: true, message: PLEASE_SELECT }]// 选择框必填校验\n\n// 环境判断\nconst ENV = import.meta.env.VITE_ENV as string\n// 生成环境所用的接口\nconst URL = import.meta.env.VITE_BASE_URL as string\n// 上传地址\nexport const FILE_API = `${ENV === 'development' ? '/api' : URL}/authority/file/upload-file`\n\n// 新增/编辑标题\nexport const ADD_TITLE = '新增'\nexport const EDIT_TITLE = (name: string, title?: string) => `编辑${ title ?? '' }${ name ? `(${name})` : '' }`\n\n// 密码规则\nexport const PASSWORD_RULE = {\n  pattern: /^(?=.*\\d)(?=.*[a-zA-Z])[\\da-zA-Z~!@#$%^&*+\\.\\_\\-*]{6,30}$/,\n  message: '密码为6-30位必须包含字母和数字!'\n}","import { encrypt, decrypt } from 'crypto-js/aes'\nimport { CRYPTO_SECRET } from './config'\nimport UTF8 from 'crypto-js/enc-utf8'\nimport md5 from 'crypto-js/md5'\n\n/**\n * @description: 加密/解密封装，secret值建议从后台接口获取\n */\n\n/**\n * 加密\n * @param data - 加密数据\n * @param secret - 加密密钥\n */\nexport function encryption(data: object, secret: string = CRYPTO_SECRET) {\n  const code = JSON.stringify(data)\n  return encrypt(code, secret).toString()\n}\n\n/**\n * 解密\n * @param data - 解密数据\n * @param secret - 解密密钥\n */\nexport function decryption(data: string, secret: string = CRYPTO_SECRET) {\n  const bytes = decrypt(data, secret)\n  const originalText = bytes.toString(UTF8)\n  if (originalText) {\n    return JSON.parse(originalText)\n  }\n  return null\n}\n\n/**\n * md5加密\n * @param data - 加密数据\n */\nexport function encryptMd5(data: string) {\n  return md5(data).toString()\n}","import { message } from 'antd'\nimport { encryption, decryption } from './crypto'\n\n/**\n * @description: localStorage封装\n */\n\n// 默认缓存期限为2天\nconst DEFAULT_CACHE_TIME = 60 * 60 * 24 * 2\n\ninterface IStorageData {\n  value: unknown;\n  expire: number | null;\n}\n\n/**\n * 设置本地缓存\n * @param key - 唯一值\n * @param value - 缓存值\n * @param expire - 缓存期限\n */\nexport function setLocalInfo(key: string, value: unknown, expire: number | null = DEFAULT_CACHE_TIME) {\n  // 缓存时间\n  const time = expire !== null ? new Date().getTime() + expire * 1000 : null\n  // 缓存数据\n  const data: IStorageData = { value, expire: time }\n  const json = encryption(data)\n  localStorage.setItem(key, json)\n}\n\n/**\n * 获取本地缓存数据\n * @param key - 唯一值\n */\nexport function getLocalInfo<T>(key: string) {\n  const json = localStorage.getItem(key)\n  \n  if (json) {\n    let data: IStorageData | null = null\n    try {\n      data = decryption(json)\n    } catch {\n      // 解密失败\n      message.error({ content: '数据解密失败', key: 'decryption' })\n    }\n\n    // 当有数据时\n    if (data) {\n      const { value, expire } = data\n      // 在有效期内直接返回\n      if (expire === null || expire >= Date.now()) {\n        return value as T\n      }\n    }\n\n    // 缓存过期或无数据清空当前本地缓存\n    removeLocalInfo(key)\n    return null\n  }\n  return null\n}\n\n/**\n * 移除指定本地缓存\n * @param key - 唯一值\n */\nexport function removeLocalInfo(key: string) {\n  localStorage.removeItem(key)\n}\n\n/** 清空本地缓存 */\nexport function clearLocalInfo() {\n  localStorage.clear()\n}\n","import { TOKEN } from '@/utils/config'\nimport { setLocalInfo, getLocalInfo, removeLocalInfo } from '@/utils/local'\n\n/**\n * token存取方法\n */\nexport function useToken() {\n  /** 获取token */\n  const getToken = () => {\n    return getLocalInfo<string>(TOKEN) || ''\n  }\n\n  /**\n   * 设置token\n   * @param value token值\n   */\n  const setToken = (value: string) => {\n    setLocalInfo(TOKEN, value)\n  }\n\n  /** 删除token */\n   const removeToken = () => {\n    removeLocalInfo(TOKEN)\n  }\n\n  return [getToken, setToken, removeToken] as const\n}\n","import axios from 'axios'\nimport { message } from 'antd'\nimport { useToken } from '@/hooks/useToken'\n\n// 生成环境所用的接口\nconst prefixUrl = import.meta.env.VITE_BASE_URL as string\n\n// 请求列表(防重复提交)\nconst requestList: string[] = []\nconst CancelToken = axios.CancelToken\nconst source = CancelToken.source()\n\n// 请求配置\nconst request = axios.create({\n  baseURL: process.env.NODE_ENV !== 'development' ? prefixUrl : '/api',\n  timeout: 180 * 1000\n})\n\n/**\n * 异常处理\n * @param error - 错误信息\n * @param content - 自定义内容\n */\nconst handleError = (error: string, content?: string) => {\n  console.error('错误信息:', error)\n  message.error({\n    content: content || error || '服务器错误',\n    key: 'error'\n  })\n}\n\n// 请求拦截\nrequest.interceptors.request.use(\n  (config) => {\n    const [getToken] = useToken()\n    const token = getToken() || ''\n    if (config?.headers && token) {\n      config.headers.Authorization = `Bearer ${token}`\n    }\n\n    // 防止重复提交（如果本次是重复操作，则取消，否则将该操作标记到requestList中）\n    const requestFlag = JSON.stringify(config.url) + JSON.stringify(config.data) + '&' + config.method\n    if (requestList.includes(requestFlag)) { // 请求标记已经存在，则取消本次请求，否则在请求列表中加入请求标记\n      source.cancel()//取消本次请求\n    } else {\n      requestList.push(requestFlag)\n    }\n    \n    return config\n  },\n  (error) => {\n    handleError(error, '服务器错误')\n    return Promise.reject(error)\n  }\n)\n\n// 响应拦截\nrequest.interceptors.response.use(\n  (response) => {\n    const res = response.data\n    // 请求返回后，将请求标记从requestList中移除\n    const requestFlag = JSON.stringify(response.config.url) + JSON.stringify(response.config.data) + '&' + response.config.method\n    const index = requestList.findIndex(item => item === requestFlag)\n    requestList.splice(index, 1)\n\n    // 后端框架错误提醒\n    if (res?.code === 0) {\n      handleError(res?.message, '权限不足，请重新登录')\n      return Promise.reject(response)\n    }\n\n    // 权限不足\n    if (res?.code === 601) {\n      handleError(res?.message)\n      return Promise.reject(response)\n    }\n\n    // 错误处理\n    if (res?.code !== 200) {\n      handleError(res?.message)\n      return Promise.reject(response)\n    }\n\n    return Promise.resolve(response)\n  },\n  (error) => {\n    //置空请求列表\n    requestList.length = 0\n    handleError(error, '服务器错误')\n    return Promise.reject(error)\n  }\n)\n\nexport { request }\n","import type { IAllDataType, IArrayData } from '#/public'\nimport type { IConstant } from './constants'\n\n/**\n * 首字母大写\n * @param str - 传入英文字符串\n */\nexport function firstCapitalize(str: string): string {\n  if (!str || typeof str !== 'string') return ''\n  return str.substring(0, 1).toUpperCase() + str.substring(1)\n}\n\n/**\n * 金额格式化3000->3,000\n * @param amount - 金额\n */\nexport function amountFormatter(amount: number) {\n  return `${amount}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n}\n\n/**\n * 生成随机数\n * @param min - 最小值\n * @param max - 最大值\n */\n export function randomNum(min: number, max: number): number {\n\tconst num = Math.floor(Math.random() * (min - max) + max)\n\treturn num\n}\n\n/**\n * 值转化为label\n * @param value - 值\n * @param arr - 常量值\n */\nexport function valueToLable(value: string | number | boolean, arr: IConstant[]): string {\n  for (let i = 0; i < arr?.length; i++) {\n    if (arr[i].value === value) {\n      return arr[i].label\n    }\n  }\n\n  return ''\n}\n\n/**\n * 获取url中参数某个值\n * @param search - url参数\n * @param key - 搜索值\n */\nexport function getUrlParam(search: string, key: string) {\n  if (!search || !key) return ''\n  // 去除首个字符串问号\n  if (search?.[0] === '?') search = search.substring(1, search.length)\n\n  const arr = search.split('&') // 分割数组\n  const pairArr: [string, string][] = []\n\n  for (let i = 0; i < arr.length; i++) {\n    const value = arr[i]?.split('=')\n    if (value?.length === 2) {\n      pairArr.push([value[0], value[1]])\n    }\n  }\n\n  for (let i = 0; i < pairArr.length; i++) {\n    if (pairArr[i][0] === key) {\n      return pairArr[i][1]\n    }\n  }\n\n  return ''\n}\n\n/**\n * 过滤空数据\n * @param obj - 传入对象\n */\ntype IEmptyData = Record<string, IAllDataType>\nexport function filterEmptyValue(obj: IEmptyData): IEmptyData {\n  const res: IEmptyData = {}\n\n  for (let key in obj) {\n    // 去除key中多余的空格\n    key = key.trim()\n\n    // undefined过滤\n    if (obj[key] === undefined) continue\n\n    // null过滤\n    if (obj[key] === null) continue\n\n    // 空数组过滤\n    if (\n      obj[key]?.constructor === Array &&\n      (obj[key] as IArrayData).length === 0\n    ) continue\n\n    // 空字符串过滤\n    if (\n      obj[key]?.constructor === String &&\n      (obj[key] as string).length === 0\n    ) continue\n\n    // 空对象过滤\n    if (\n      obj[key]?.constructor === Object &&\n      Object.keys(obj[key] as object).length === 0\n    ) continue\n\n    // 去除字符串多余空格\n    if (obj[key]?.constructor === String) {\n      res[key] = (obj[key] as string).trim()\n    } else {\n      res[key] = obj[key]\n    }\n  }\n\n  return res\n}\n\n/**\n * 递归数据\n * @param data - 数据源\n */\ninterface IRecursiveChildren<T> { children?: T[] }\nexport function recursiveData<T extends IRecursiveChildren<T>, U>(\n  data: T[],\n  callback: (data: T) => U\n): U[] {\n  if (data. length === 0) return []\n  const res: U[] = []\n\n  for (let i = 0; i < data.length; i++) {\n    const element = data[i]\n    const filterData = callback(element)\n    const children = element.children ? recursiveData(element.children, callback) : undefined\n    res.push({ ...filterData, children })\n  }\n\n  return res\n}","import type { IApiResult } from '#/form'\nimport type { IServerResult } from '#/public'\nimport { request } from '@/utils/request'\nimport { recursiveData } from '@/utils/helper'\n\nenum API {\n  URL = '/platform/game',\n  COMMON_URL = '/authority/common',\n}\n\ninterface IResult {\n  id: string;\n  name: string;\n  children?: IResult[];\n}\n\nexport function getGames(data?: unknown): Promise<IApiResult[]> {\n  return new Promise((resolve, reject) => {\n    request.get<IServerResult<IResult[]>>(`${API.COMMON_URL}/games`, { params: data }).then(res => {\n\n      // 递归数据\n     const result = recursiveData<IResult, IApiResult>(res?.data?.data, item => {\n        const { id, name } = item\n        const filterData = {\n          value: id,\n          label: `${id}:${name}`\n        }\n        return filterData\n      })\n\n      resolve(result)\n    }).catch(() => reject([]))\n  })\n}\n","import type { TreeSelectProps } from 'antd'\nimport { getGames } from '@/servers/platform/game'\nimport ApiTreeSelect from \"@/components/Selects/ApiTreeSelect\"\n\n/**\n * @description: 游戏下拉组件\n */\nfunction GameSelect(props: TreeSelectProps) {\n  return (\n    <>\n      <ApiTreeSelect\n        {...props}\n        multiple={true}\n        api={getGames}\n      />\n    </>\n  )\n}\n\nexport default GameSelect","import type { IApiResult } from '#/form'\nimport type { IServerResult } from '#/public'\nimport { request } from '@/utils/request'\n\nenum API {\n  URL = '/platform/partner',\n}\n\ninterface IResult {\n  id: string;\n  name: string;\n}\n\n/**\n * 获取分页数据\n * @param data - 请求数据\n */\nexport function getPartner(data?: unknown): Promise<IApiResult[]> {\n  return new Promise((resolve, reject) => {\n    request.get<IServerResult<IResult[]>>(`${API.URL}`, { params: data }).then(res => {\n      const data: IApiResult[] = []\n\n      res?.data?.data.forEach(item => {\n        data.push({\n          label: item.name,\n          value: item.id\n        })\n      })\n\n      resolve(data)\n    }).catch(() => reject([]))\n  })\n}\n","import type { SelectProps } from 'antd'\nimport { getPartner } from '@/servers/platform/partner'\nimport ApiSelect from '@/components/Selects/ApiSelect'\n\n/**\n * @description: 合作公司下拉组件\n */\nfunction PartnerSelect(props: SelectProps) {\n  return (\n    <ApiSelect\n      {...props}\n      api={getPartner}\n      mode='multiple'\n    />\n  )\n}\n\nexport default PartnerSelect","import { addComponent } from \"../Form/utils/componentMap\"\nimport GameSelect from \"./Selects/GameSelect\"\nimport PartnerSelect from \"./Selects/PartnerSelect\"\n\n// 自定义组件名\nexport type IBusinessComponents = 'GameSelect' | 'PartnerSelect'\n\n/** 组件注入 */\nexport function CreateBusiness() {\n  addComponent('GameSelect', GameSelect)\n  addComponent('PartnerSelect', PartnerSelect)\n}"],"names":["TITLE_SUFFIX","TOKEN","EMPTY_VALUE","CRYPTO_SECRET","THEME_KEY","PLEASE_ENTER","PLEASE_SELECT","MAX_TAG_COUNT","INPUT_REQUIRED","SELECT_REQUIRED","URL","FILE_API","ADD_TITLE","EDIT_TITLE","name","title","PASSWORD_RULE","encryption","data","secret","code","encrypt","decryption","originalText","decrypt","UTF8","DEFAULT_CACHE_TIME","setLocalInfo","key","value","expire","time","json","getLocalInfo","message","removeLocalInfo","useToken","prefixUrl","requestList","CancelToken","axios","source","request","handleError","error","content","config","getToken","token","requestFlag","response","res","index","item","amountFormatter","amount","randomNum","min","max","valueToLable","arr","i","getUrlParam","search","pairArr","_a","recursiveData","callback","element","filterData","children","getGames","resolve","reject","result","id","GameSelect","props","jsx","Fragment","ApiTreeSelect","getPartner","PartnerSelect","ApiSelect","CreateBusiness","addComponent"],"mappings":"2SAGO,MAAMA,EAAe,SACfC,EAAQ,cAERC,EAAc,IACdC,EAAgB,wBAChBC,EAAY,YAGXC,EAAe,MACfC,EAAgB,MAChBC,EAAgB,aAChBC,EAAiB,CAAC,CAAE,SAAU,GAAM,QAASH,EAAc,EAC3DI,EAAkB,CAAC,CAAE,SAAU,GAAM,QAASH,EAAe,EAKrEI,EAAM,qEAECC,GAAW,GAAoCD,+BAG/CE,GAAY,KACZC,GAAa,CAACC,EAAcC,IAAmB,KAAMA,GAAS,KAAOD,EAAO,IAAIA,KAAU,KAG1FE,GAAgB,CAC3B,QAAS,4DACT,QAAS,oBACX,EClBgB,SAAAC,EAAWC,EAAcC,EAAiBhB,EAAe,CACjE,MAAAiB,EAAO,KAAK,UAAUF,CAAI,EAChC,OAAOG,EAAQ,QAAAD,EAAMD,CAAM,EAAE,SAAS,CACxC,CAOgB,SAAAG,EAAWJ,EAAcC,EAAiBhB,EAAe,CAEjE,MAAAoB,EADQC,EAAAA,QAAQN,EAAMC,CAAM,EACP,SAASM,CAAI,EACxC,OAAIF,EACK,KAAK,MAAMA,CAAY,EAEzB,IACT,CCvBA,MAAMG,EAAqB,GAAK,GAAK,GAAK,EAanC,SAASC,EAAaC,EAAaC,EAAgBC,EAAwBJ,EAAoB,CAE9F,MAAAK,EAAOD,IAAW,KAAO,IAAI,OAAO,UAAYA,EAAS,IAAO,KAGhEE,EAAOf,EADc,CAAE,MAAAY,EAAO,OAAQE,CAAK,CACrB,EACf,aAAA,QAAQH,EAAKI,CAAI,CAChC,CAMO,SAASC,EAAgBL,EAAa,CACrC,MAAAI,EAAO,aAAa,QAAQJ,CAAG,EAErC,GAAII,EAAM,CACR,IAAId,EAA4B,KAC5B,GAAA,CACFA,EAAOI,EAAWU,CAAI,CAAA,MACtB,CAEAE,EAAQ,MAAM,CAAE,QAAS,SAAU,IAAK,aAAc,CACxD,CAGA,GAAIhB,EAAM,CACF,KAAA,CAAE,MAAAW,EAAO,OAAAC,CAAW,EAAAZ,EAE1B,GAAIY,IAAW,MAAQA,GAAU,KAAK,MAC7B,OAAAD,CAEX,CAGA,OAAAM,EAAgBP,CAAG,EACZ,IACT,CACO,OAAA,IACT,CAMO,SAASO,EAAgBP,EAAa,CAC3C,aAAa,WAAWA,CAAG,CAC7B,CC9DO,SAASQ,GAAW,CAmBlB,MAAA,CAjBU,IACRH,EAAqBhC,CAAK,GAAK,GAOtB4B,GAAkB,CAClCF,EAAa1B,EAAO4B,CAAK,CAAA,EAIN,IAAM,CACzBM,EAAgBlC,CAAK,CAAA,CAGgB,CACzC,CCrBA,MAAMoC,EAAY,qEAGZC,EAAwB,CAAA,EACxBC,EAAcC,EAAM,YACpBC,EAASF,EAAY,SAGrBG,EAAUF,EAAM,OAAO,CAC3B,QAAkDH,EAClD,QAAS,IAAM,GACjB,CAAC,EAOKM,EAAc,CAACC,EAAeC,IAAqB,CAC/C,QAAA,MAAM,QAASD,CAAK,EAC5BV,EAAQ,MAAM,CACZ,QAASW,GAAWD,GAAS,QAC7B,IAAK,OAAA,CACN,CACH,EAGAF,EAAQ,aAAa,QAAQ,IAC1BI,GAAW,CACJ,KAAA,CAACC,CAAQ,EAAIX,IACbY,EAAQD,EAAc,GAAA,GACxBD,GAAA,MAAAA,EAAQ,SAAWE,IACdF,EAAA,QAAQ,cAAgB,UAAUE,KAI3C,MAAMC,EAAc,KAAK,UAAUH,EAAO,GAAG,EAAI,KAAK,UAAUA,EAAO,IAAI,EAAI,IAAMA,EAAO,OACxF,OAAAR,EAAY,SAASW,CAAW,EAClCR,EAAO,OAAO,EAEdH,EAAY,KAAKW,CAAW,EAGvBH,CACT,EACCF,IACCD,EAAYC,EAAO,OAAO,EACnB,QAAQ,OAAOA,CAAK,EAE/B,EAGAF,EAAQ,aAAa,SAAS,IAC3BQ,GAAa,CACZ,MAAMC,EAAMD,EAAS,KAEfD,EAAc,KAAK,UAAUC,EAAS,OAAO,GAAG,EAAI,KAAK,UAAUA,EAAS,OAAO,IAAI,EAAI,IAAMA,EAAS,OAAO,OACjHE,EAAQd,EAAY,UAAUe,GAAQA,IAASJ,CAAW,EAI5D,OAHQX,EAAA,OAAOc,EAAO,CAAC,GAGvBD,GAAA,YAAAA,EAAK,QAAS,GACJR,EAAAQ,GAAA,YAAAA,EAAK,QAAS,YAAY,EAC/B,QAAQ,OAAOD,CAAQ,IAI5BC,GAAA,YAAAA,EAAK,QAAS,MAMdA,GAAA,YAAAA,EAAK,QAAS,KAChBR,EAAYQ,GAAA,YAAAA,EAAK,OAAO,EACjB,QAAQ,OAAOD,CAAQ,GAGzB,QAAQ,QAAQA,CAAQ,CACjC,EACCN,IAECN,EAAY,OAAS,EACrBK,EAAYC,EAAO,OAAO,EACnB,QAAQ,OAAOA,CAAK,EAE/B,EC3EO,SAASU,GAAgBC,EAAgB,CAC9C,MAAO,GAAGA,IAAS,QAAQ,wBAAyB,GAAG,CACzD,CAOiB,SAAAC,GAAUC,EAAaC,EAAqB,CAErD,OADK,KAAK,MAAM,KAAK,OAAY,GAAAD,EAAMC,GAAOA,CAAG,CAEzD,CAOgB,SAAAC,GAAa9B,EAAkC+B,EAA0B,CACvF,QAASC,EAAI,EAAGA,GAAID,GAAA,YAAAA,EAAK,QAAQC,IAC/B,GAAID,EAAIC,CAAC,EAAE,QAAUhC,EACZ,OAAA+B,EAAIC,CAAC,EAAE,MAIX,MAAA,EACT,CAOgB,SAAAC,GAAYC,EAAgBnC,EAAa,OACnD,GAAA,CAACmC,GAAU,CAACnC,EAAY,MAAA,IAExBmC,GAAA,YAAAA,EAAS,MAAO,MAAKA,EAASA,EAAO,UAAU,EAAGA,EAAO,MAAM,GAE7D,MAAAH,EAAMG,EAAO,MAAM,GAAG,EACtBC,EAA8B,CAAA,EAEpC,QAASH,EAAI,EAAGA,EAAID,EAAI,OAAQC,IAAK,CACnC,MAAMhC,GAAQoC,EAAAL,EAAIC,CAAC,IAAL,YAAAI,EAAQ,MAAM,MACxBpC,GAAA,YAAAA,EAAO,UAAW,GACZmC,EAAA,KAAK,CAACnC,EAAM,CAAC,EAAGA,EAAM,CAAC,CAAC,CAAC,CAErC,CAEA,QAASgC,EAAI,EAAGA,EAAIG,EAAQ,OAAQH,IAClC,GAAIG,EAAQH,CAAC,EAAE,CAAC,IAAMjC,EACb,OAAAoC,EAAQH,CAAC,EAAE,CAAC,EAIhB,MAAA,EACT,CAsDgB,SAAAK,EACdhD,EACAiD,EACK,CACL,GAAIjD,EAAM,SAAW,EAAG,MAAO,GAC/B,MAAMiC,EAAW,CAAA,EAEjB,QAASU,EAAI,EAAGA,EAAI3C,EAAK,OAAQ2C,IAAK,CAC9B,MAAAO,EAAUlD,EAAK2C,CAAC,EAChBQ,EAAaF,EAASC,CAAO,EAC7BE,EAAWF,EAAQ,SAAWF,EAAcE,EAAQ,SAAUD,CAAQ,EAAI,OAChFhB,EAAI,KAAK,CAAE,GAAGkB,EAAY,SAAAC,CAAU,CAAA,CACtC,CAEO,OAAAnB,CACT,CC7HO,SAASoB,EAASrD,EAAuC,CAC9D,OAAO,IAAI,QAAQ,CAACsD,EAASC,IAAW,CAC9B/B,EAAA,IAA8B,0BAA2B,CAAE,OAAQxB,CAAM,CAAA,EAAE,KAAYiC,GAAA,OAG9F,MAAMuB,EAASR,GAAmCD,EAAAd,GAAA,YAAAA,EAAK,OAAL,YAAAc,EAAW,KAAcZ,GAAA,CAClE,KAAA,CAAE,GAAAsB,EAAI,KAAA7D,CAAS,EAAAuC,EAKd,MAJY,CACjB,MAAOsB,EACP,MAAO,GAAGA,KAAM7D,GAAA,CAEX,CACR,EAED0D,EAAQE,CAAM,CACf,CAAA,EAAE,MAAM,IAAMD,EAAO,CAAA,CAAE,CAAC,CAAA,CAC1B,CACH,CC1BA,SAASG,EAAWC,EAAwB,CAC1C,OAEIC,EAAAC,EAAA,CAAA,SAAAD,EAACE,EAAA,CACE,GAAGH,EACJ,SAAU,GACV,IAAKN,CAAA,CAET,CAAA,CAAA,CAEJ,CCAO,SAASU,EAAW/D,EAAuC,CAChE,OAAO,IAAI,QAAQ,CAACsD,EAASC,IAAW,CAC9B/B,EAAA,IAA8B,oBAAc,CAAE,OAAQxB,CAAM,CAAA,EAAE,KAAYiC,GAAA,OAChF,MAAMjC,EAAqB,CAAA,GAEtB+C,EAAAd,GAAA,YAAAA,EAAA,OAAA,MAAAc,EAAM,KAAK,QAAgBZ,GAAA,CAC9BnC,EAAK,KAAK,CACR,MAAOmC,EAAK,KACZ,MAAOA,EAAK,EAAA,CACb,CAAA,GAGHmB,EAAQtD,CAAI,CACb,CAAA,EAAE,MAAM,IAAMuD,EAAO,CAAA,CAAE,CAAC,CAAA,CAC1B,CACH,CCzBA,SAASS,EAAcL,EAAoB,CAEvC,OAAAC,EAACK,EAAA,CACE,GAAGN,EACJ,IAAKI,EACL,KAAK,UAAA,CAAA,CAGX,CCPO,SAASG,IAAiB,CAC/BC,EAAa,aAAcT,CAAU,EACrCS,EAAa,gBAAiBH,CAAa,CAC7C"}
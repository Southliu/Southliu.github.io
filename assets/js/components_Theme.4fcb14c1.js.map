{"version":3,"file":"components_Theme.4fcb14c1.js","sources":["../../../src/components/Theme/index.tsx"],"sourcesContent":["import type { AppDispatch } from '@/stores'\nimport { IThemeType, setThemeValue } from '@/stores/public'\nimport { Tooltip } from 'antd'\nimport { Icon } from '@iconify/react'\nimport { useEffect, useState } from 'react'\nimport { THEME_KEY } from '@/utils/config'\nimport { useDispatch } from 'react-redux'\nimport { useAliveController } from 'react-activation'\n\nfunction Theme() {\n  const { clear, refresh, getCachingNodes } = useAliveController()\n  const dispatch: AppDispatch = useDispatch()\n  const themeCache = (localStorage.getItem(THEME_KEY) || 'light') as IThemeType\n  const [theme, setTheme] = useState<IThemeType>(themeCache)\n\n  useEffect(() => {\n    if (!themeCache) {\n      localStorage.setItem(THEME_KEY, 'light')\n    }\n    if (themeCache === 'dark') {\n      document.body.className = 'theme-dark'\n    }\n    dispatch(setThemeValue(themeCache === 'dark' ? 'dark' : 'light'))\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [themeCache])\n\n  /** 刷新全部keepalive */\n  const refreshAllKeepalive = () => {\n    const cacheNodes = getCachingNodes()\n\n    for (let i = 0; i < cacheNodes?.length; i++) {\n      const { name } = cacheNodes[i]\n      if (name) refresh(name)\n    }\n  }\n\n  /**\n   * 处理更新\n   * @param type - 主题类型\n   */\n  const onChange = (type: IThemeType) => {\n    localStorage.setItem(THEME_KEY, type)\n    dispatch(setThemeValue(type))\n    setTheme(type)\n\n    clear()\n    refreshAllKeepalive()\n\n    switch (type) {\n      case 'dark':\n        document.body.className = 'theme-dark'\n        break\n\n      default:\n        document.body.className = 'theme-primary'\n        break\n    }\n  }\n\n  return (\n    <Tooltip title='主题模式'>\n      <div className=\"flex items-center justify-center text-lg mr-4 cursor-pointer\">\n        {\n          theme === 'light' &&\n          <Icon\n            icon=\"mdi-white-balance-sunny\"\n            onClick={() => onChange('dark')}\n          />\n        }\n        {\n          theme !== 'light' &&\n          <Icon\n            icon=\"mdi-moon-waning-crescent\"\n            onClick={() => onChange('light')}\n          />\n        }\n      </div>\n    </Tooltip>\n  )\n}\n\nexport default Theme"],"names":["Theme","clear","refresh","getCachingNodes","useAliveController","dispatch","useDispatch","themeCache","THEME_KEY","theme","setTheme","useState","useEffect","setThemeValue","refreshAllKeepalive","cacheNodes","i","name","onChange","type","Tooltip","jsxs","jsx","Icon"],"mappings":"0YASA,SAASA,GAAQ,CACf,KAAM,CAAE,MAAAC,EAAO,QAAAC,EAAS,gBAAAC,GAAoBC,EAAmB,mBAAA,EACzDC,EAAwBC,IACxBC,EAAc,aAAa,QAAQC,CAAS,GAAK,QACjD,CAACC,EAAOC,CAAQ,EAAIC,WAAqBJ,CAAU,EAEzDK,EAAAA,UAAU,IAAM,CACTL,GACU,aAAA,QAAQC,EAAW,OAAO,EAErCD,IAAe,SACjB,SAAS,KAAK,UAAY,cAE5BF,EAASQ,EAAcN,IAAe,OAAS,OAAS,OAAO,CAAC,CAAA,EAE/D,CAACA,CAAU,CAAC,EAGf,MAAMO,EAAsB,IAAM,CAChC,MAAMC,EAAaZ,IAEnB,QAASa,EAAI,EAAGA,GAAID,GAAA,YAAAA,EAAY,QAAQC,IAAK,CAC3C,KAAM,CAAE,KAAAC,CAAA,EAASF,EAAWC,CAAC,EACzBC,GAAMf,EAAQe,CAAI,CACxB,CAAA,EAOIC,EAAYC,GAAqB,CAQrC,OAPa,aAAA,QAAQX,EAAWW,CAAI,EAC3Bd,EAAAQ,EAAcM,CAAI,CAAC,EAC5BT,EAASS,CAAI,EAEPlB,IACca,IAEZK,EAAM,CACZ,IAAK,OACH,SAAS,KAAK,UAAY,aAC1B,MAEF,QACE,SAAS,KAAK,UAAY,gBAC1B,KACJ,CAAA,EAGF,SACGC,EAAQ,CAAA,MAAM,OACb,SAACC,EAAA,MAAA,CAAI,UAAU,+DAEX,SAAA,CAAAZ,IAAU,SACVa,EAACC,EAAA,CACC,KAAK,0BACL,QAAS,IAAML,EAAS,MAAM,CAAA,CAChC,EAGAT,IAAU,SACVa,EAACC,EAAA,CACC,KAAK,2BACL,QAAS,IAAML,EAAS,OAAO,CAAA,CACjC,CAAA,CAEJ,CAAA,CACF,CAAA,CAEJ"}
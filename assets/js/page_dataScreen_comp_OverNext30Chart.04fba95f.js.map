{"version":3,"file":"page_dataScreen_comp_OverNext30Chart.04fba95f.js","sources":["../../../src/pages/dataScreen/components/OverNext30Chart/index.tsx"],"sourcesContent":["import type { EChartsOption } from 'echarts'\nimport { useEcharts } from '@/hooks/useEcharts'\nimport { randomNum } from '@/utils/helper'\nimport styles from './index.module.less'\n\nfunction OverNext30Chart() {\n  // js 获取当前日期到之后一个月30天的日期区间\n  const initDate = (): string[] => {\n    const dateList = []\n    const startDate = new Date()\n    const endDate = new Date()\n    endDate.setDate(startDate.getDate() + 30)\n    startDate.setDate(startDate.getDate() + 1)\n    while (endDate.getTime() - startDate.getTime() >= 0) {\n      const month =\n        (startDate.getMonth() + 1).toString().length === 1\n          ? \"0\" + (startDate.getMonth() + 1).toString()\n          : startDate.getMonth() + 1\n      const day = startDate.getDate().toString().length === 1 ? \"0\" + startDate.getDate() : startDate.getDate()\n      dateList.push(month + \"/\" + day)\n      startDate.setDate(startDate.getDate() + 1)\n    }\n    return dateList\n  }\n  const data = {\n    unit: [\"访问量\"],\n    data: new Array(30).fill(\"\").map(val => {\n      val = randomNum(1, 20000)\n      return val\n    })\n  }\n\n  const option: EChartsOption = {\n    tooltip: {\n      trigger: \"axis\",\n      confine: true,\n      formatter: params => {\n        const tipData = (params as {name: string, value: string}[])[0]\n        const html = `<div class=${styles.bg}>\n                        <span style=\"\">${tipData.name} <i >${tipData.value}</i> 人次访问</span>\n                    </div>`\n        return html\n      },\n      backgroundColor: \"transparent\", //提示标签背景颜色\n      borderColor: \"transparent\",\n      axisPointer: {\n        lineStyle: {\n          type: \"dashed\"\n        },\n        snap: true\n      },\n      extraCssText: \"box-shadow: none;padding:0\"\n    },\n    grid: {\n      top: \"15%\",\n      left: \"5%\",\n      right: \"5%\",\n      bottom: \"15%\"\n    },\n    xAxis: [\n      {\n        type: \"category\",\n        boundaryGap: false,\n        axisLine: {\n          //坐标轴轴线相关设置。数学上的x轴\n          show: true,\n          symbol: [\"none\", \"arrow\"],\n          symbolOffset: [0, 30],\n          lineStyle: {\n            color: \"#233653\",\n            shadowOffsetX: 20,\n            shadowColor: \"#233653\"\n          }\n        },\n        axisLabel: {\n          //坐标轴刻度标签的相关设置\n          color: \"#7ec7ff\",\n          padding: 0,\n          fontSize: 12,\n          formatter: function (data) {\n            return data\n          }\n        },\n        splitLine: {\n          show: false,\n          lineStyle: {\n            color: \"#192a44\"\n          }\n        },\n        axisTick: {\n          show: false\n        },\n        data: initDate()\n      }\n    ],\n    yAxis: data.unit.map((val: string, index: number) => {\n      return {\n        name: \"(访问量)\",\n        nameTextStyle: {\n          color: \"#7ec7ff\",\n          fontSize: 12,\n          padding: [0, 30, -4, 0]\n        },\n        // nameGap:18,\n        minInterval: 1,\n        splitLine: {\n          show: false,\n          lineStyle: {\n            color: \"#192a44\"\n          }\n        },\n        axisLine: {\n          show: index === 0 ? true : false,\n          lineStyle: {\n            color: \"#233653\"\n          }\n        },\n        axisLabel: {\n          show: true,\n          color: \"#7ec7ff\",\n          padding: 0,\n          formatter: function (value: string) {\n            if (Number(value) >= 10000) {\n              value = Number(value) / 10000 + \"w\"\n            }\n            return value\n          }\n        },\n        axisTick: {\n          show: false\n        }\n      }\n    }),\n    series: data.data.map(() => {\n      return {\n        name: \"\",\n        type: \"line\",\n        symbol: \"circle\", // 默认是空心圆（中间是白色的），改成实心圆\n        showSymbol: false,\n        smooth: true,\n        lineStyle: {\n          width: 1,\n          color: \"#707070\", // 线条颜色\n          borderColor: \"#707070\"\n        },\n        itemStyle: {\n          color: \"#F5B348\",\n          shadowColor: \"rgba(245, 179, 72, 0.3)\",\n          shadowBlur: 3\n        },\n        emphasis: {\n          scale: true\n        },\n        areaStyle: {\n          //区域填充样式\n          //线性渐变，前4个参数分别是x0,y0,x2,y2(范围0~1);相当于图形包围盒中的百分比。如果最后一个参数是‘true’，则该四个值是绝对像素位置。\n          color: {\n            type: \"linear\",\n            x: 0,\n            y: 0,\n            x2: 0,\n            y2: 1,\n            colorStops: [\n              {\n                offset: 0,\n                color: \"#846B38\" // 0% 处的颜色\n              },\n              {\n                offset: 0.5,\n                color: \"#403E47\" // 0% 处的颜色\n              },\n              {\n                offset: 1,\n                color: \"#11144E\" // 100% 处的颜色\n              }\n            ],\n            global: false // 缺省为 false\n          },\n          shadowColor: \"rgba(255, 199, 37, 0)\", //阴影颜色\n          shadowBlur: 20 //shadowBlur设图形阴影的模糊大小。配合shadowColor,shadowOffsetX/Y, 设置图形的阴影效果。\n        },\n        data: data.data\n      }\n    })\n  }\n\n  const [echartsRef] = useEcharts(option, data)\n  return <div className=\"echarts\" ref={echartsRef}></div>\n}\n\nexport default OverNext30Chart"],"names":["OverNext30Chart","initDate","dateList","startDate","endDate","month","day","data","val","randomNum","option","params","tipData","styles","index","value","echartsRef","useEcharts","jsx"],"mappings":"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"}
{"version":3,"file":"components_Table.50241b2a.js","sources":["../../../src/components/Table/utils/helper.ts","../../../src/components/Table/components/ResizableTitle.tsx","../../../src/components/Table/utils/reducer.ts","../../../src/utils/is.ts","../../../src/components/Table/utils/state.ts","../../../src/components/Table/components/VirtualWrapper.tsx","../../../src/components/Table/hooks/useVirtual.tsx","../../../src/components/Table/BasicTable.tsx"],"sourcesContent":["import type { SizeType } from 'antd/es/config-provider/SizeContext'\nimport type { ColumnsType } from 'antd/es/table'\nimport { EMPTY_VALUE } from '@/utils/config'\n\n/** 计算表格高度 */\nexport function getTableHeight(): number {\n  // 屏幕高度\n  const screenHeight = window.innerHeight\n\n  // 顶部高度\n  const headerElm = document.getElementById('header')\n  const headerHeight = headerElm?.offsetHeight\n\n  // 搜索高度\n  const searchesElm = document.getElementById('searches')\n  const searchesHeight = searchesElm?.offsetHeight\n\n  // 分页高度\n  const paginationElm = document.getElementById('pagination')\n  const paginationHeight = paginationElm?.offsetHeight\n\n  // 表格高度 = 内容高度 - 搜索高度 - 分页高度\n  let tableHeight = screenHeight || 0\n  if (headerHeight && tableHeight > 0) tableHeight -= headerHeight\n  if (searchesHeight && tableHeight > 0) tableHeight -= searchesHeight\n  if (paginationHeight && tableHeight > 0) tableHeight -= paginationHeight\n\n  return tableHeight > 0 ? tableHeight - 65 : 450\n}\n\n/**\n * 根据大小处理行高度\n * @param size - 大小\n */\nexport function handleRowHeight(size: SizeType): number {\n  switch(size) {\n    case 'large':\n      return 54\n\n    case 'middle':\n      return 46\n\n    default:\n      return 38\n  }\n}\n\n/**\n * 表格处理，表头超出隐藏，空值转为‘-’\n * @param columns - 表格数据\n */\nexport function filterTableColumns(columns: ColumnsType<object>) {\n  for (let i = 0; i < columns.length; i++) {\n    const element = columns[i]\n    if (element.ellipsis === undefined) {\n      element.ellipsis = true\n    }\n    if (!element.render) {\n      element.render = (text: string | number) => {\n        return text ? text : text === 0 ? text : EMPTY_VALUE\n      }\n    }\n  }\n\n  return columns\n}\n","import type { ResizeCallbackData } from 'react-resizable'\nimport React from 'react'\nimport { Resizable } from 'react-resizable'\n\n/** 自定义拖拽  */\nfunction ResizableTitle(\n  props: React.HTMLAttributes<unknown> & {\n    onResize: (e: React.SyntheticEvent<Element>, data: ResizeCallbackData) => void\n    width: number\n  },\n) {\n  const { onResize, width, ...restProps } = props\n\n  if (!width) {\n    return <th {...restProps} />\n  }\n\n  return (\n    <Resizable\n      width={width}\n      height={0}\n      handle={\n        <span\n          className=\"react-resizable-handle\"\n          onClick={e => {\n            e.stopPropagation()\n          }}\n        />\n      }\n      onResize={onResize}\n      draggableOpts={{ enableUserSelectHack: false }}\n    >\n      <th {...restProps} />\n    </Resizable>\n  )\n}\n\nexport default ResizableTitle","\nexport interface IInitTableState {\n  rowHeight: number\n  curScrollTop: number\n  scrollHeight: number\n  tableScrollY: number\n}\n\nexport interface ITableAction extends Partial<IInitTableState> {\n  type: 'changeScroll' | 'reset';\n}\n\n/**\n * 状态管理reducer\n * @param state - 初始化值\n * @param action - 触发值\n */\nexport function reducer(state: IInitTableState, action: ITableAction) {\n  switch (action.type) {\n    // 监听滚动变化\n    case 'changeScroll':\n      let curScrollTop = action.curScrollTop || 0\n      let scrollHeight = action.scrollHeight || 0\n      const tableScrollY = action.tableScrollY || 0\n\n      // 处理scrollHeight小于0的情况\n      if (scrollHeight <= 0) scrollHeight = 0\n\n      // 更新可滚动区高度\n      if (scrollHeight !== 0 && tableScrollY === state.tableScrollY) {\n        scrollHeight = state.scrollHeight\n      }\n\n      // 更新当前滚动高度\n      if (state.scrollHeight && curScrollTop > state.scrollHeight) {\n        curScrollTop = state.scrollHeight\n      }\n      \n      return {\n        ...state,\n        curScrollTop,\n        scrollHeight,\n        tableScrollY\n      }\n\n    // 重置\n    case 'reset':\n      return {\n        ...state,\n        curScrollTop: 0,\n        scrollHeight: 0\n      }\n\n    default:\n      throw new Error('表格：未知错误类型!')\n  }\n}","/**\n * 是否是方法\n * @param val - 参数\n */\nexport function isFunction(val: unknown): boolean {\n  return typeof val === 'function'\n}\n\n/**\n * 是否是数字\n * @param obj - 值\n */\nexport function isNumber(obj: unknown): boolean {\n  return typeof obj === 'number' && isFinite(obj)\n}\n\n/**\n * 是否是URL\n * @param path - 路径\n */\nexport function isUrl(path: string): boolean {\n  const reg =\n    /(((^https?:(?:\\/\\/)?)(?:[-;:&=\\+\\$,\\w]+@)?[A-Za-z0-9.-]+(?::\\d+)?|(?:www.|[-;:&=\\+\\$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[\\+~%\\/.\\w-_]*)?\\??(?:[-\\+=&;%@.\\w_]*)#?(?:[\\w]*))?)$/\n  return reg.test(path)\n}\n\n/**\n * 是否是NULL\n * @param value - 值\n */\nexport function isNull(value: unknown): boolean {\n  return value === null\n}","import type { Dispatch } from 'react'\nimport { createContext } from 'react'\nimport { ITableAction } from './reducer'\n\ninterface IScrollContextProps {\n  dispatch?: Dispatch<ITableAction>;\n  renderLen: number;\n  start: number;\n  offsetStart: number;\n  rowHeight: number;\n  totalLen: number;\n}\n\nexport const ScrollContext = createContext<IScrollContextProps>({\n  dispatch: undefined,\n  renderLen: 1,\n  start: 0,\n  offsetStart: 0,\n  rowHeight: 46,\n  totalLen: 0\n})","import type { DetailedHTMLProps, HTMLAttributes, ReactNode } from 'react'\nimport { useContext } from 'react'\nimport { ScrollContext } from '../utils/state'\n\ntype IProps = DetailedHTMLProps<HTMLAttributes<HTMLTableSectionElement>, HTMLTableSectionElement>\n\n function VirtualWrapper(props: IProps): JSX.Element {\n  const { children, ...restProps } = props\n  const { renderLen, start, offsetStart } = useContext(ScrollContext)\n  let tempNode = null\n\n  if (children && children !== null) {\n    const contents = (children as ReactNode[])?.[1]\n\n    if (Array.isArray(contents) && contents.length) {\n      tempNode = [\n        (children as ReactNode[])?.[0],\n        contents.slice(start, start + renderLen).map(item => {\n          if (Array.isArray(item)) {\n            // 兼容antd v4.3.5 --- rc-table 7.8.1及以下\n            return item[0]\n          } \n          // 处理antd ^v4.4.0  --- rc-table ^7.8.2\n          return item\n          \n        })\n      ]\n    } else {\n      tempNode = children\n    }\n  }\n\n  return (\n    <tbody\n      {...restProps}\n      style={{ transform: `translateY(-${offsetStart}px)` }}\n    >\n      {tempNode}\n    </tbody>\n  )\n}\n\nexport default VirtualWrapper","import type { IInitTableState } from '../utils/reducer'\nimport type { CSSProperties, ReactNode } from 'react'\nimport type { SizeType } from 'antd/es/config-provider/SizeContext'\nimport {\n  useEffect,\n  useReducer,\n  useRef,\n  useState,\n  useMemo\n} from 'react'\nimport { reducer } from '../utils/reducer'\nimport { isNumber } from '@/utils/is'\nimport { ScrollContext } from '../utils/state'\nimport { handleRowHeight } from '../utils/helper'\nimport { useThrottleFn } from 'ahooks'\nimport VirtualWrapper from '../components/VirtualWrapper'\n\nconst initialState: IInitTableState = {\n  rowHeight: 38, // 行高度\n  curScrollTop: 0, // 当前的滚动高度\n  scrollHeight: 0, // 可滚动区域的高度\n  tableScrollY: 0 // 可滚动区域值\n}\n\ntype IChildren = ReactNode & Array<{\n  props: {\n    data: {\n      length: number\n    }\n  }\n}>\n\ninterface IVirtualTableProps {\n  style?: CSSProperties;\n  children: IChildren;\n}\n\nlet scrollY: number | string = 0\n\n/**\n * 表格渲染\n * @param props - 传递值\n */\nfunction VirtualTable(props: IVirtualTableProps) {\n  const { style, children, ...rest } = props\n  const { width, ...restStyle } = style as CSSProperties\n  const [state, dispatch] = useReducer(reducer, initialState)\n\n  const wrapTableRef = useRef<HTMLDivElement>(null)\n  const tableRef = useRef<HTMLTableElement>(null)\n\n  // 数据的总条数\n  const [totalLen, setTotalLen] = useState<number>(children?.[2]?.props?.data?.length ?? 0)\n\n  useEffect(() => {\n    if (isNumber(children?.[1]?.props?.data?.length)) {\n      setTotalLen(children?.[1]?.props?.data?.length)\n    }\n  }, [children])\n\n  // table总高度\n  const tableHeight = useMemo<string | number>(() => {\n    let temp: string | number = 'auto'\n    if (state.rowHeight && totalLen) {\n      temp = state.rowHeight * totalLen\n    }\n    return temp\n  }, [state.rowHeight, totalLen])\n\n  // table的scrollY值\n  let tableScrollY = 0\n  if (typeof scrollY === 'string') {\n    tableScrollY = (wrapTableRef.current?.parentNode as HTMLElement)?.offsetHeight\n  } else {\n    tableScrollY = scrollY\n  }\n\n  if (isNumber(tableHeight) && tableHeight < tableScrollY) {\n    tableScrollY = tableHeight as number\n  }\n\n  // 处理tableScrollY小于0的情况\n  if (tableScrollY <= 0) tableScrollY = 0\n\n  // 渲染的条数\n  const renderLen = useMemo<number>(() => {\n    let temp = 1\n    if (state.rowHeight && totalLen && tableScrollY) {\n      if (tableScrollY <= 0) {\n        temp = 0\n      } else {\n        const tempRenderLen = ((tableScrollY / state.rowHeight) | 0) + 5\n        temp = tempRenderLen > totalLen ? totalLen : tempRenderLen\n      }\n    }\n    return temp\n  }, [state.rowHeight, totalLen, tableScrollY])\n\n  // 渲染中的第一条\n  let start = state.rowHeight ? (state.curScrollTop / state.rowHeight) | 0 : 0\n  // 偏移量\n  let offsetStart = state.rowHeight ? state.curScrollTop % state.rowHeight : 0\n\n  // 用来优化向上滚动出现的空白\n  if (state.curScrollTop && state.rowHeight && state.curScrollTop > state.rowHeight) {\n    if (start > totalLen - renderLen) {\n      // 可能以后会做点操作\n      offsetStart = 0\n    } else if (start > 1) {\n      start = start - 1\n      offsetStart += state.rowHeight\n    }\n  } else {\n    start = 0\n  }\n\n  useEffect(() => {\n    // totalLen变化, 那么搜索条件一定变化, 数据也一定变化.\n    const parentNode = wrapTableRef.current?.parentNode as HTMLElement\n    if (parentNode) {\n      parentNode.scrollTop = 0\n    }\n    dispatch({ type: 'reset' })\n  }, [totalLen])\n\n  /** 滑动节流 */\n  const throttleScroll = useThrottleFn((e: Event) => {\n    const scrollTop: number = (e?.target as HTMLElement)?.scrollTop ?? 0\n\n    if (scrollTop !== state.curScrollTop) {\n      const scrollHeight = (e?.target as HTMLElement)?.scrollHeight - tableScrollY\n      dispatch({\n        type: 'changeScroll',\n        curScrollTop: scrollTop,\n        scrollHeight,\n        tableScrollY\n      })\n    }\n  }, { wait: 60 })\n\n  useEffect(() => {\n    const ref = wrapTableRef?.current?.parentNode as HTMLElement\n\n    if (ref) {\n      ref.addEventListener('scroll', e => throttleScroll.run(e))\n    }\n\n    return () => {\n      ref.removeEventListener('scroll', e => throttleScroll.run(e))\n    }\n  }, [\n    wrapTableRef,\n    state.curScrollTop,\n    tableScrollY,\n    state.scrollHeight,\n    throttleScroll\n  ])\n\n  return (\n    <div\n      className='virtualTable'\n      ref={wrapTableRef}\n      style={{\n        width: '100%',\n        position: 'relative',\n        height: tableHeight,\n        boxSizing: 'border-box',\n        paddingTop: state.curScrollTop\n      }}\n    >\n      <ScrollContext.Provider\n        value={{\n          dispatch,\n          rowHeight: state.rowHeight,\n          start,\n          offsetStart,\n          renderLen,\n          totalLen\n        }}\n      >\n        <table\n          {...rest}\n          ref={tableRef}\n          style={{\n            ...restStyle,\n            width,\n            position: 'relative'\n          }}\n        >\n          { children }\n        </table>\n      </ScrollContext.Provider>\n    </div>\n  )\n}\n\ninterface IProps {\n  height: number | string;\n  size: SizeType\n}\n\nexport default function useVirtualTable(props: IProps) {\n  const { height, size } = props\n  scrollY = height\n  initialState.rowHeight = handleRowHeight(size)\n\n  return {\n    table: VirtualTable,\n    body: {\n      wrapper: VirtualWrapper\n    }\n  }\n}\n","import type { ResizeCallbackData } from 'react-resizable'\nimport type { ColumnsType, ColumnType } from 'antd/es/table'\nimport type { TableProps } from 'antd'\nimport { useMemo, useState, useEffect, memo } from 'react'\nimport { Table, Skeleton } from 'antd'\nimport { getTableHeight, handleRowHeight, filterTableColumns } from './utils/helper'\nimport ResizableTitle from './components/ResizableTitle'\nimport useVirtualTable from './hooks/useVirtual'\n\ntype IComponents = TableProps<object>['components']\n\ninterface IProps extends Omit<TableProps<object>, 'bordered'> {\n  isBordered?: boolean; // 是否开启边框\n  isZebra?: boolean; // 是否开启斑马线\n  isVirtual?: boolean; // 是否开启虚拟滚动\n  scrollX?: number;\n  scrollY?: number;\n}\n\nfunction BasicTable(props: IProps) {\n  const {\n    loading,\n    isZebra,\n    isBordered,\n    isVirtual,\n    scrollX,\n    scrollY,\n    rowClassName,\n    size\n  } = props\n  const [columns, setColumns] = useState(filterTableColumns(props.columns as ColumnsType<object>))\n\n  useEffect(() => {\n    setColumns(filterTableColumns(props.columns as ColumnsType<object>))\n  }, [props.columns])\n\n  // 表格高度\n  const tableHeight = getTableHeight()\n\n  /**\n   * 处理拖拽\n   * @param index - 下标\n   */\n  const handleResize = (index: number) => {\n    return (_: React.SyntheticEvent<Element>, { size }: ResizeCallbackData) => {\n      const newColumns = [...columns]\n      newColumns[index] = {\n        ...newColumns[index],\n        width: size.width,\n      }\n      setColumns(newColumns)\n    }\n  }\n\n  // 合并列表\n  const mergeColumns = columns.map((col, index) => ({\n    ...col,\n    onHeaderCell: (column: ColumnType<object>) => ({\n      width: column.width,\n      onResize: handleResize(index),\n    }),\n  }))\n\n  // 虚拟滚动操作值\n  const virtualOptions = useVirtualTable({\n    height: tableHeight, // 设置可视高度\n    size: size || 'small'\n  })\n\n  // 虚拟滚动组件\n  const virtualComponents = useMemo(() => {\n    return {\n      header: {\n        cell: ResizableTitle,\n      },\n      body: {\n        wrapper: virtualOptions.body.wrapper\n      },\n      table: virtualOptions.table\n    } as IComponents\n  }, [virtualOptions])\n\n  // 只带拖拽功能组件\n  const components: IComponents = isVirtual === true ? virtualComponents : {\n    header: {\n      cell: ResizableTitle,\n    }\n  }\n\n  // 滚动\n  const scroll = {\n    ...props.scroll,\n    x: scrollX ?? 'max-content',\n    y: scrollY || tableHeight || undefined\n  }\n\n  /**\n   * 处理行内样式\n   */\n  const handleRowClassName: TableProps<object>['rowClassName'] = (record: object, index: number, indent: number) => {\n    const className = typeof rowClassName === 'string' ? rowClassName : rowClassName?.(record, index, indent)\n    const rowSize = `!h-${handleRowHeight(size)}px`\n\n    return `${className || ''} ${rowSize}`\n  }\n\n  return (\n    <div\n      id=\"table\"\n      className={`\n        overflow-auto\n        ${isBordered !== false ? 'bordered' : ''}\n        ${isZebra !== false ? 'zebra' : ''}\n      `}\n    >\n      {\n        !tableHeight &&\n        <Skeleton />\n      }\n      {\n        tableHeight &&\n        <Table\n          size='small'\n          rowKey='id'\n          pagination={false}\n          loading={loading}\n          {...props}\n          rowClassName={handleRowClassName}\n          style={{\n            borderRadius: 10,\n            borderRight: '1px solid rgba(0, 0, 0, .05)',\n            borderBottom: '1px solid rgba(0, 0, 0, .05)',\n            overflow: 'auto',\n            ...props.style\n          }}\n          bordered={isBordered !== false}\n          scroll={scroll}\n          components={components}\n          columns={mergeColumns as ColumnsType<object>}\n        />\n      }\n    </div>\n  )\n}\n\nexport default memo(BasicTable)"],"names":["getTableHeight","screenHeight","headerElm","headerHeight","searchesElm","searchesHeight","paginationElm","paginationHeight","tableHeight","handleRowHeight","size","filterTableColumns","columns","i","element","text","EMPTY_VALUE","ResizableTitle","props","onResize","width","restProps","jsx","Resizable","e","reducer","state","action","curScrollTop","scrollHeight","tableScrollY","isNumber","obj","ScrollContext","createContext","VirtualWrapper","children","renderLen","start","offsetStart","useContext","tempNode","contents","item","initialState","scrollY","VirtualTable","style","rest","restStyle","dispatch","useReducer","wrapTableRef","useRef","tableRef","totalLen","setTotalLen","useState","_c","_b","_a","useEffect","_f","_e","_d","useMemo","temp","tempRenderLen","parentNode","throttleScroll","useThrottleFn","scrollTop","ref","useVirtualTable","height","BasicTable","loading","isZebra","isBordered","isVirtual","scrollX","rowClassName","setColumns","handleResize","index","_","newColumns","mergeColumns","col","column","virtualOptions","virtualComponents","components","scroll","jsxs","Skeleton","Table","record","indent","className","rowSize","memo"],"mappings":"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"}
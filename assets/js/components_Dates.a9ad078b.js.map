{"version":3,"file":"components_Dates.a9ad078b.js","sources":["../../../src/utils/constants.ts","../../../src/components/Dates/utils/helper.ts","../../../src/components/Dates/BasicDatePicker.tsx","../../../src/components/Dates/BasicRangePicker.tsx","../../../src/components/Dates/BasicTimePicker.tsx","../../../src/components/Dates/BasicTimeRangePicker.tsx"],"sourcesContent":["import { DefaultOptionType } from 'antd/es/select'\n\n/**\n * @description: 公用常量\n */\n\n/**\n * 颜色\n */\n export enum colors {\n  success = 'green',\n  primary = '#409EFF',\n  warning = '#E6A23C',\n  danger = 'red',\n  info = '#909399'\n}\n\nexport interface IConstant extends Omit<DefaultOptionType, 'children'> {\n  value: string | number;\n  label: string;\n  color?: colors;\n  children?: IConstant[];\n}\n\n// 日期格式化\nexport const DATE_FORMAT = 'YYYY-MM-DD'\nexport const TIME_FORMAT = 'YYYY-MM-DD hh:mm:ss'\n\n/**\n * 开启状态\n */\n export const OPEN_CLOSE: IConstant[] = [\n  { label: '开启', value: 1 },\n  { label: '关闭', value: 0 }\n]\n\n/**\n * 菜单状态\n */\n export const MENU_STATUS: IConstant[] = [\n  { label: '显示', value: 1 },\n  { label: '隐藏', value: 0 }\n]\n\n/**\n * 菜单模块\n */\n export const MENU_MODULE: IConstant[] = [\n  { value: 'authority', label: '权限系统' },\n  { value: 'platform', label: '运营系统' },\n  { value: 'stat', label: '统计系统' },\n  { value: 'ad', label: '投放系统' },\n  { value: 'cs', label: '客服系统' },\n  { value: 'log', label: '日志系统' }\n]\n\n/**\n * 菜单作用类型\n */\n export const MENU_ACTIONS: IConstant[] = [\n  { value: 'create', label: '创建' },\n  { value: 'update', label: '更新' },\n  { value: 'delete', label: '删除' },\n  { value: 'detail', label: '详情' },\n  { value: 'export', label: '导出' },\n  { value: 'status', label: '状态' },\n]","import type { IFormData, IFormList } from '#/form'\nimport type { Dayjs } from 'dayjs'\nimport type { RangeValue } from '#/public'\nimport type { DatePickerProps } from 'antd'\nimport { DATE_FORMAT } from '@/utils/constants'\nimport dayjs from 'dayjs'\n\n/**\n * @description isDayjs必须使用dayjs.isDayjs形式，否则打包会失败\n */\n\n/**\n * dayjs类型转字符串类型\n * @param value - dayjs时间类型值\n */\n export function dayjs2String(\n  value: Dayjs | string,\n  format = DATE_FORMAT\n): string {\n  if (dayjs.isDayjs(value)) {\n    return value.format(format)\n  }\n  return value\n}\n\n/**\n * 字符串类型转dayjs类型\n * @param value - 字符串\n */\nexport function string2Dayjs(value: Dayjs | string): Dayjs {\n  if (dayjs.isDayjs(value)) {\n    return value\n  }\n  return dayjs(value)\n}\n\n/**\n * dayjs数组类型转字符串类型\n * @param value - dayjs时间类型值\n */\nexport function dayjsRang2StringRang(\n  value: RangeValue<Dayjs>,\n  format = DATE_FORMAT\n) {\n  if (!value) return undefined\n\n  if (\n    value?.length > 1 &&\n    dayjs.isDayjs(value?.[0]) &&\n    dayjs.isDayjs(value?.[1])\n  ) {\n    return [\n      value[0].format(format),\n      value[1].format(format)\n    ]\n  }\n  return value\n}\n\n/**\n * 字符串类型转dayjs类型\n * @param value - 字符串\n */\nexport function stringRang2DayjsRang(\n  value: RangeValue<string> | RangeValue<Dayjs>\n): RangeValue<Dayjs> | undefined {\n  if (!value) return undefined\n\n  // 当第一个数据都不为Dayjs\n  if (\n    value?.length > 1 &&\n    !dayjs.isDayjs(value?.[0]) &&\n    dayjs.isDayjs(value?.[1])\n  ) {\n    return [dayjs(value[0]), value[1]]\n  }\n\n  // 当最后一个数据都不为Dayjs\n  if (\n    value?.length > 1 &&\n    dayjs.isDayjs(value?.[0]) &&\n    !dayjs.isDayjs(value?.[1])\n  ) {\n    return [value[0], dayjs(value[1])]\n  }\n\n  // 当两个数据都不为Dayjs\n  if (\n    value?.length > 1 &&\n    !dayjs.isDayjs(value?.[0]) &&\n    !dayjs.isDayjs(value?.[1])\n  ) {\n    return [dayjs(value[0]), dayjs(value[1])]\n  }\n  return value as RangeValue<Dayjs>\n}\n\n/**\n * 获取列表中改键值数据\n * @param list - 列表值\n * @param key - 键值\n */\nfunction getListKeyParam(list: IFormList[], key: string): string {\n  for (let i = 0; i < list.length; i++) {\n    if (list[i].name === key) {\n      return (list[i].componentProps as DatePickerProps)?.format as string\n              || DATE_FORMAT\n    }\n  }\n\n  return DATE_FORMAT\n}\n\n/**\n * 将Dayjs转为字符串\n * @param obj - 检测对象\n * @param list - 列表值\n */\nexport function filterDayjs(obj: IFormData, list: IFormList[]): object {\n  for (const key in obj) {\n    // 判断是否是时间区间\n    if (\n      (obj[key] as [Dayjs, Dayjs])?.length === 2 &&\n      dayjs.isDayjs((obj[key] as [Dayjs, Dayjs])[0]) &&\n      dayjs.isDayjs((obj[key] as [Dayjs, Dayjs])[1]) \n    ) {\n      const format = getListKeyParam(list, key)\n      obj[key] = dayjsRang2StringRang(\n        obj[key] as [Dayjs, Dayjs],\n        format\n      )\n    }\n\n    // 如果是Dayjs类型则转换成字符串\n    if (obj?.[key] && dayjs.isDayjs(obj[key])) {\n      const format = getListKeyParam(list, key)\n      obj[key] = dayjs2String(obj[key] as Dayjs, format)\n    }\n  }\n\n  return obj\n}\n","import type { DatePickerProps } from 'antd'\nimport { DatePicker } from 'antd'\nimport { string2Dayjs } from './utils/helper'\n\nfunction BasicDatePicker(props: DatePickerProps) {\n  const { value } = props\n  const params = {...props}\n\n  // 如果值不是dayjs类型则进行转换\n  if (value) params.value = string2Dayjs(value)\n\n  return (\n    <DatePicker\n      {...params}\n    />\n  )\n}\n\nexport default BasicDatePicker","import type { Dayjs } from 'dayjs'\nimport type { RangePickerProps } from 'antd/es/date-picker/generatePicker'\nimport { DatePicker } from 'antd'\n\nimport { stringRang2DayjsRang } from './utils/helper'\n\nconst { RangePicker } = DatePicker\n\nfunction BasicRangePicker(props: RangePickerProps<Dayjs>) {\n  const { value } = props\n  const params = {...props}\n\n  // 如果值不是dayjs类型则进行转换\n  if (value) params.value = stringRang2DayjsRang(value)\n\n  return (\n    <RangePicker\n      {...params}\n    />\n  )\n}\n\nexport default BasicRangePicker","import type { TimePickerProps } from 'antd'\nimport { TimePicker } from 'antd'\nimport { string2Dayjs } from './utils/helper'\n\nfunction BasicTimePicker(props: TimePickerProps) {\n  const { value } = props\n  const params = {...props}\n\n  // 如果值不是dayjs类型则进行转换\n  if (value) params.value = string2Dayjs(value)\n\n  return (\n    <TimePicker\n      {...params}\n    />\n  )\n}\n\nexport default BasicTimePicker","import type { TimeRangePickerProps } from 'antd'\nimport { TimePicker } from 'antd'\nimport { stringRang2DayjsRang } from './utils/helper'\n\nconst { RangePicker } = TimePicker\n\nfunction BasicTimePicker(props: TimeRangePickerProps) {\n  const { value } = props\n  const params = {...props}\n\n  // 如果值不是dayjs类型则进行转换\n  if (value) params.value = stringRang2DayjsRang(value)\n\n  return (\n    <RangePicker\n      {...params}\n    />\n  )\n}\n\nexport default BasicTimePicker"],"names":["DATE_FORMAT","TIME_FORMAT","OPEN_CLOSE","MENU_STATUS","MENU_MODULE","MENU_ACTIONS","dayjs2String","value","format","dayjs","string2Dayjs","dayjsRang2StringRang","stringRang2DayjsRang","getListKeyParam","list","key","_a","filterDayjs","obj","BasicDatePicker","props","params","jsx","DatePicker","RangePicker","BasicRangePicker","BasicTimePicker","TimePicker"],"mappings":"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"}
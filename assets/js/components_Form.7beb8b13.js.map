{"version":3,"file":"components_Form.7beb8b13.js","sources":["../../../src/components/Form/utils/helper.ts","../../../src/components/Form/utils/componentMap.tsx","../../../src/components/Form/BasicForm.tsx"],"sourcesContent":["import type { IComponentProps, IComponentType } from '#/form'\nimport { PLEASE_ENTER, PLEASE_SELECT } from '@/utils/config'\nimport { DATE_FORMAT, TIME_FORMAT } from '@/utils/constants'\n\n/**\n * 处理子节点的值的属性\n * @param component - 组件名\n */\nexport function handleValuePropName(component: IComponentType): string {\n  switch (component) {\n    case 'Switch':\n    case 'Checkbox':\n    case 'CheckboxGroup':\n      return 'checked'\n\n    case 'Upload':\n      return 'fileList'\n\n    default:\n      return 'value'\n  }\n}\n\n/**\n * 初始化组件自定义属性\n * @param component - 组件名\n */\nexport function initCompProps(component: IComponentType): IComponentProps {\n  switch (component) {\n    // 下拉框\n    case 'Select':\n      return {\n        allowClear: true,\n        placeholder: PLEASE_SELECT\n      }\n\n    // 数字框\n    case 'InputNumber':\n      return {\n        placeholder: PLEASE_ENTER\n      }\n\n    // 勾选框\n    case 'Checkbox':\n      return {}\n\n    // 勾选框组\n    case 'CheckboxGroup':\n      return {}\n\n    // 日期\n    case 'DatePicker':\n      return {\n        placeholder: PLEASE_SELECT,\n        format: DATE_FORMAT,\n      }\n\n    // 日期区间\n    case 'RangePicker':\n      return {\n        placeholder: [PLEASE_SELECT, PLEASE_SELECT],\n        format: [DATE_FORMAT, DATE_FORMAT],\n      }\n\n    // 时间\n    case 'TimePicker':\n      return {\n        placeholder: PLEASE_SELECT,\n        format: TIME_FORMAT,\n      }\n\n    // 时间区间\n    case 'TimeRangePicker':\n      return {\n        placeholder: [PLEASE_SELECT, PLEASE_SELECT],\n        format: [TIME_FORMAT, TIME_FORMAT],\n      }\n    \n    default:\n      return {\n        allowClear: true,\n        placeholder: PLEASE_ENTER\n      }\n  }\n}","import type { IComponentType, IFormList } from '#/form'\nimport { initCompProps } from './helper'\nimport { CreateBusiness } from '@/components/Business'\nimport {\n  Input,\n  InputNumber,\n  AutoComplete,\n  Select,\n  TreeSelect,\n  Checkbox,\n  Radio,\n  Switch,\n  Rate,\n  Slider,\n  Upload\n} from 'antd'\nimport ApiSelect from '@/components/Selects/ApiSelect'\nimport ApiTreeSelect from '@/components/Selects/ApiTreeSelect'\nimport BasicDatePicker from '@/components/Dates/BasicDatePicker'\nimport BasicRangePicker from '@/components/Dates/BasicRangePicker'\nimport BasicTimePicker from '@/components/Dates/BasicTimePicker'\nimport BasicTimeRangePicker from '@/components/Dates/BasicTimeRangePicker'\nimport PasswordStrength from '@/components/PasswordStrength'\nimport WangEditor from '@/components/WangEditor'\n\nconst componentMap = new Map()\n\n// antd组件注入\ncomponentMap.set('Input', Input)\ncomponentMap.set('InputNumber', InputNumber)\ncomponentMap.set('InputPassword', Input.Password)\ncomponentMap.set('AutoComplete', AutoComplete)\ncomponentMap.set('Select', Select)\ncomponentMap.set('TreeSelect', TreeSelect)\ncomponentMap.set('Checkbox', Checkbox)\ncomponentMap.set('CheckboxGroup', Checkbox.Group)\ncomponentMap.set('RadioGroup', Radio.Group)\ncomponentMap.set('Switch', Switch)\ncomponentMap.set('Rate', Rate)\ncomponentMap.set('Slider', Slider)\ncomponentMap.set('Upload', Upload)\ncomponentMap.set('DatePicker', BasicDatePicker)\ncomponentMap.set('RangePicker', BasicRangePicker)\ncomponentMap.set('TimePicker', BasicTimePicker)\ncomponentMap.set('TimeRangePicker', BasicTimeRangePicker)\ncomponentMap.set('ApiSelect', ApiSelect)\ncomponentMap.set('ApiTreeSelect', ApiTreeSelect)\ncomponentMap.set('PasswordStrength', PasswordStrength)\ncomponentMap.set('Editor', WangEditor)\n\n// 业务组件注入\nCreateBusiness()\n\n/**\n * 获取组件\n * @param item - 表单项\n */\nexport function getComponent(item: IFormList) {\n  const { component, componentProps } = item\n\n  // 当组件类型为自定义时\n  if (component === 'customize') {\n    const { render } = item\n    // 获取组件自定义渲染失败直接返回空标签\n    if (!render) return <></>\n    addComponent('customize', render)\n  }\n\n  const Comp = componentMap.get(component)\n  // 获取组件失败直接返回空标签\n  if (!Comp) return <></>\n\n  return (\n    <Comp\n      {...initCompProps(component)}\n      {...componentProps}\n    />\n  )\n}\n\n/**\n * 添加组件\n * @param name - 组件名\n * @param component - 组件\n */\nexport function addComponent(name: IComponentType, component: unknown): void {\n  componentMap.set(name, component)\n}\n\n/**\n * 删除组件\n * @param name - 组件名\n */\nexport function deleteComponent(name: IComponentType): void {\n  componentMap.delete(name)\n}\n","import type { ReactNode, Ref } from 'react'\nimport type { IFormData, IFormList } from '#/form'\nimport type { ColProps } from 'antd'\nimport type { IAllDataType } from '#/public'\nimport { useEffect, useImperativeHandle } from 'react'\nimport { FormProps } from 'antd'\nimport { Form } from 'antd'\nimport { getComponent } from '../Form/utils/componentMap'\nimport { handleValuePropName } from './utils/helper'\nimport { filterDayjs } from '../Dates/utils/helper'\n\nexport interface IFormFn {\n  getFieldValue: (key: string) => IAllDataType;\n  getFieldsValue: () => IFormData;\n  handleReset: () => void;\n  handleSubmit: () => void;\n}\n\ninterface IProps {\n  list: IFormList[];\n  data: IFormData;\n  children?: ReactNode;\n  labelCol?: Partial<ColProps>;\n  wrapperCol?: Partial<ColProps>;\n  formRef?: Ref<IFormFn>;\n  handleFinish: FormProps['onFinish'];\n}\n\nfunction BasicForm(props: IProps) {\n  const {\n    list,\n    data,\n    children,\n    labelCol,\n    wrapperCol,\n    formRef,\n    handleFinish\n  } = props\n  const [form] = Form.useForm()\n\n  // 抛出外部方法\n  useImperativeHandle(\n    formRef,\n    () => ({\n      /**\n       * 获取表单值\n       * @param key - 表单唯一值\n       */\n      getFieldValue: (key: string) => {\n        return form.getFieldValue(key) || {}\n      },\n      /** 获取表单全部值 */\n      getFieldsValue: () => {\n        return form.getFieldsValue() || {}\n      },\n      /** 重置表单 */\n      handleReset: () => {\n        form.resetFields()\n      },\n      /** 提交表单  */\n      handleSubmit: () => {\n        form.submit()\n      }\n    } as IFormFn)\n  )\n\n  // 监听传入表单数据，如果变化则替换表单\n  useEffect(() => {\n    form.resetFields()\n    form.setFieldsValue(props.data)\n  }, [form, props.data])\n\n  /**\n   * 提交表单\n   * @param values - 表单值\n   */\n  const onFinish: FormProps['onFinish'] = values => {\n    if (handleFinish) {\n      // 将dayjs类型转为字符串\n      const params = filterDayjs(values, list)\n      handleFinish?.(params)\n    }\n  }\n  \n  /**\n   * 表单提交失败处理\n   * @param errorInfo - 错误信息\n   */\n  const onFinishFailed: FormProps['onFinishFailed'] = errorInfo => {\n    console.warn('表单错误:', errorInfo)\n  }\n\n  return (\n    <div>\n      <Form\n        name=\"basic\"\n        form={form}\n        labelCol={labelCol ? labelCol : { span: 6 }}\n        wrapperCol={wrapperCol ? wrapperCol : { span: 15 }}\n        initialValues={data}\n        onFinish={onFinish}\n        onFinishFailed={onFinishFailed}\n        autoComplete=\"off\"\n      >\n        {\n          list?.map(item => (\n            <Form.Item\n              key={`${item.name}`}\n              label={item.label}\n              name={item.name}\n              rules={!item.hidden ? item.rules : []}\n              className={item.hidden ? '!hidden' : ''}\n              valuePropName={handleValuePropName(item.component)}\n            >\n              { getComponent(item) }\n            </Form.Item>\n          ))\n        }\n\n        { children }\n      </Form>\n    </div>\n  )\n}\n\nexport default BasicForm"],"names":["handleValuePropName","component","initCompProps","PLEASE_SELECT","PLEASE_ENTER","DATE_FORMAT","TIME_FORMAT","componentMap","Input","InputNumber","AutoComplete","Select","TreeSelect","Checkbox","Radio","Switch","Rate","Slider","Upload","BasicDatePicker","BasicRangePicker","BasicTimePicker","BasicTimeRangePicker","ApiSelect","ApiTreeSelect","PasswordStrength","WangEditor","CreateBusiness","getComponent","item","componentProps","render","jsx","Fragment","addComponent","Comp","name","BasicForm","props","list","data","children","labelCol","wrapperCol","formRef","handleFinish","form","Form","useImperativeHandle","key","useEffect","jsxs","values","params","filterDayjs","errorInfo"],"mappings":"4iBAQO,SAASA,EAAoBC,EAAmC,CACrE,OAAQA,EAAW,CACjB,IAAK,SACL,IAAK,WACL,IAAK,gBACI,MAAA,UAET,IAAK,SACI,MAAA,WAET,QACS,MAAA,OACX,CACF,CAMO,SAASC,EAAcD,EAA4C,CACxE,OAAQA,EAAW,CAEjB,IAAK,SACI,MAAA,CACL,WAAY,GACZ,YAAaE,CAAA,EAIjB,IAAK,cACI,MAAA,CACL,YAAaC,CAAA,EAIjB,IAAK,WACH,MAAO,GAGT,IAAK,gBACH,MAAO,GAGT,IAAK,aACI,MAAA,CACL,YAAaD,EACb,OAAQE,CAAA,EAIZ,IAAK,cACI,MAAA,CACL,YAAa,CAACF,EAAeA,CAAa,EAC1C,OAAQ,CAACE,EAAaA,CAAW,CAAA,EAIrC,IAAK,aACI,MAAA,CACL,YAAaF,EACb,OAAQG,CAAA,EAIZ,IAAK,kBACI,MAAA,CACL,YAAa,CAACH,EAAeA,CAAa,EAC1C,OAAQ,CAACG,EAAaA,CAAW,CAAA,EAGrC,QACS,MAAA,CACL,WAAY,GACZ,YAAaF,CAAA,CAEnB,CACF,CC3DA,MAAMG,MAAmB,IAGzBA,EAAa,IAAI,QAASC,CAAK,EAC/BD,EAAa,IAAI,cAAeE,CAAW,EAC3CF,EAAa,IAAI,gBAAiBC,EAAM,QAAQ,EAChDD,EAAa,IAAI,eAAgBG,CAAY,EAC7CH,EAAa,IAAI,SAAUI,CAAM,EACjCJ,EAAa,IAAI,aAAcK,CAAU,EACzCL,EAAa,IAAI,WAAYM,CAAQ,EACrCN,EAAa,IAAI,gBAAiBM,EAAS,KAAK,EAChDN,EAAa,IAAI,aAAcO,EAAM,KAAK,EAC1CP,EAAa,IAAI,SAAUQ,CAAM,EACjCR,EAAa,IAAI,OAAQS,CAAI,EAC7BT,EAAa,IAAI,SAAUU,CAAM,EACjCV,EAAa,IAAI,SAAUW,CAAM,EACjCX,EAAa,IAAI,aAAcY,CAAe,EAC9CZ,EAAa,IAAI,cAAea,CAAgB,EAChDb,EAAa,IAAI,aAAcc,CAAe,EAC9Cd,EAAa,IAAI,kBAAmBe,CAAoB,EACxDf,EAAa,IAAI,YAAagB,CAAS,EACvChB,EAAa,IAAI,gBAAiBiB,CAAa,EAC/CjB,EAAa,IAAI,mBAAoBkB,CAAgB,EACrDlB,EAAa,IAAI,SAAUmB,CAAU,EAGrCC,IAMO,SAASC,EAAaC,EAAiB,CACtC,KAAA,CAAE,UAAA5B,EAAW,eAAA6B,CAAmB,EAAAD,EAGtC,GAAI5B,IAAc,YAAa,CACvB,KAAA,CAAE,OAAA8B,CAAW,EAAAF,EAEnB,GAAI,CAACE,EAAQ,OAASC,EAAAC,EAAA,CAAA,CAAA,EACtBC,EAAa,YAAaH,CAAM,CAClC,CAEM,MAAAI,EAAO5B,EAAa,IAAIN,CAAS,EAEvC,OAAKkC,EAGHH,EAACG,EAAA,CACE,GAAGjC,EAAcD,CAAS,EAC1B,GAAG6B,CAAA,CAAA,EALYE,EAAAC,EAAA,CAAA,CAAA,CAQtB,CAOgB,SAAAC,EAAaE,EAAsBnC,EAA0B,CAC9DM,EAAA,IAAI6B,EAAMnC,CAAS,CAClC,CC3DA,SAASoC,GAAUC,EAAe,CAC1B,KAAA,CACJ,KAAAC,EACA,KAAAC,EACA,SAAAC,EACA,SAAAC,EACA,WAAAC,EACA,QAAAC,EACA,aAAAC,CACE,EAAAP,EACE,CAACQ,CAAI,EAAIC,EAAK,QAAQ,EAG5BC,OAAAA,EAAA,oBACEJ,EACA,KAAO,CAKL,cAAgBK,GACPH,EAAK,cAAcG,CAAG,GAAK,CAAA,EAGpC,eAAgB,IACPH,EAAK,eAAe,GAAK,GAGlC,YAAa,IAAM,CACjBA,EAAK,YAAY,CACnB,EAEA,aAAc,IAAM,CAClBA,EAAK,OAAO,CACd,CAAA,EACF,EAIFI,EAAAA,UAAU,IAAM,CACdJ,EAAK,YAAY,EACZA,EAAA,eAAeR,EAAM,IAAI,CAC7B,EAAA,CAACQ,EAAMR,EAAM,IAAI,CAAC,IAuBlB,MACC,CAAA,SAAAa,EAACJ,EAAA,CACC,KAAK,QACL,KAAAD,EACA,SAAUJ,GAAsB,CAAE,KAAM,CAAE,EAC1C,WAAYC,GAA0B,CAAE,KAAM,EAAG,EACjD,cAAeH,EACf,SAxB4CY,GAAA,CAChD,GAAIP,EAAc,CAEV,MAAAQ,EAASC,EAAYF,EAAQb,CAAI,EACvCM,GAAA,MAAAA,EAAeQ,EACjB,CAAA,EAoBI,eAb2DE,GAAA,CACvD,QAAA,KAAK,QAASA,CAAS,CAAA,EAa3B,aAAa,MAGX,SAAA,CAAAhB,GAAA,YAAAA,EAAM,IACJV,GAAAG,EAACe,EAAK,KAAL,CAEC,MAAOlB,EAAK,MACZ,KAAMA,EAAK,KACX,MAAQA,EAAK,OAAsB,CAAC,EAAdA,EAAK,MAC3B,UAAWA,EAAK,OAAS,UAAY,GACrC,cAAe7B,EAAoB6B,EAAK,SAAS,EAE/C,WAAaA,CAAI,CAAA,EAPd,GAAGA,EAAK,MAAA,GAYjBY,CAAA,CAAA,CAEN,CAAA,CAAA,CAEJ"}